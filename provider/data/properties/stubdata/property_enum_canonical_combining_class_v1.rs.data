// @generated
/// Implement `DataProvider<PropertyEnumCanonicalCombiningClassV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 7020B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_property_enum_canonical_combining_class_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_PROPERTY_ENUM_CANONICAL_COMBINING_CLASS_V1: &'static <icu::properties::provider::PropertyEnumCanonicalCombiningClassV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointMap::CodePointTrie(unsafe { icu::collections::codepointtrie::CodePointTrie::from_parts_unstable_unchecked_v1(icu::collections::codepointtrie::CodePointTrieHeader { high_start: 125440u32, shifted12_high_start: 31u16, index3_null_offset: 132u16, data_null_offset: 0u32, null_value: 0u32, trie_type: icu::collections::codepointtrie::TrieType::Fast }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\0\xBD\0\0\0\0\0\0\0\0\0\xFA\0\0\0\0\0\0\0)\x01i\x01\x99\x01\xCE\x01\0\0\xFF\x01.\x02m\x02\0\0\x82\x02\xC0\x02\xEE\x02\x17\x03M\x03\x8D\x03\xCA\x03\x8D\x03\xFD\x03\x8D\x03<\x04\x8D\x03<\x04\x8D\x03<\x04\0\0<\x04\x8D\x03o\x04\x8D\x03<\x04\x86\x04<\x04\0\0\xC3\x04\xCE\x04\t\x05\x15\x05P\x05x\x05\xB2\x05\xF2\x05,\x065\x06\0\0%\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9C\x06\0\0\0\0\xD1\x06\0\0\0\0\xEF\x06\0\0\x19\x07\0\0\0\0\0\0U\x07u\x07\xB5\x07\xF4\x07\x95\x030\x08d\x08\x90\x08\x92\x03\0\0\0\0\xC4\x08\0\0\0\0\0\0\x04\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0D\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0u\t\0\0\xA7\t\0\0\xE7\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'\n\0\0W\nr\n\xB0\n\xD0\n\0\0\0\0\0\0\0\0\n\x0B\0\0\0\x002\x0Bd\x0B\xF7\x03\x96\x03\xA4\x0B\0\0\0\0\xB4\x0B\xF4\x0B\0\0\0\0\0\0\x07\xx0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0K\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0G\x06W\x06o\x06\x8E\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0%\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xED\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xF7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0~\x0C\0\0\0\0\x8E\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0g\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9E\x0C\0\0\0\0\0\0\xF4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xC3\n\0\0\0\0\0\0\0\0\xFA\x02\0\0\0\0\0\0\0\0\xA8\x0C\xED\x01\0\0\0\0\xB8\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\x04\0\0\0\0\xC8\x0C\0\0\0\0\0\0\xCE\x0C\0\0\0\0\0\0\0\0\xEA\0\0\0\0\0\xAD\x06\0\0\0\0\0\0\xC6\x03\0\0\0\0\0\0\0\0\xDE\x0C\0\0\0\0\0\0\xE9\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xF0\x0C\0\0\0\0\0\0\0\0\xFB\x0C\xCA\x03\0\0\x08\r\xE8\0\0\0\0\0\0\0\0\0\xB3\x04\n\x04\0\0\0\0\0\0\0\0\x16\r-\x04\0\0\0\0\0\0\0\0\0\0\0\0$\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xFB\x03'\r\0\0\0\0\0\0\xFB\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \r\0\0\0\0\0\0\0\0\0\0\0\0\xFF\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xCE\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xB4\x04\xC6\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\x04\0\0\0\0\0\0\x06\x04\x03\x04\0\0\0\0\0\0\0\0\x01\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xFB\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0j\x06\0\0\0\0\0\0\0\0\x03\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0m\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x007\r\0\0\0\0\0\0\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0G\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0I\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\rf\rs\r\0\0\x7F\r\0\0\0\0\0\0\0\0\0\0\x8B\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8F\r\x97\r\xA5\r\0\0\0\0\0\0\0\0\0\0q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0-\x04\0\0\0\0\0\0t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xB0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0P\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xC0\r\0\0\0\0\0\0\0\0\0\0\0\0\xCC\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\x04$\x04\x84\0\x84\0\x84\0D\x04S\x04j\x04\x86\x04\xA3\x04\xC1\x04\xDE\x04\xFB\x04\x1A\x057\x05Q\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0(\x05\x84\0\x84\0\x84\0\x84\0f\x05\x84\0z\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x9A\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\xA4\x05\xC0\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\xE0\x05\xF6\x05\x08\x06\x84\0'\x06") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE8\xDC\xDC\xDC\xDC\xE8\xD8\xDC\xDC\xDC\xDC\xDC\xCA\xCA\xDC\xDC\xDC\xDC\xCA\xCA\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xDC\x01\x01\x01\x01\x01\xDC\xDC\xDC\xDC\xE6\xE6\xE6\xE6\xE6\xF0\xE6\xDC\xDC\xDC\xE6\xE6\xE6\xDC\xDC\0\xE6\xE6\xE6\xDC\xDC\xDC\xDC\xE6\xE8\xDC\xDC\xE6\xE9\xEA\xEA\xE9\xEA\xEA\xE9\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\xE6\xE6\xE6\xE6\xDC\xE6\xE6\xE6\xDE\xDC\xE6\xE6\xE6\xE6\xE6\xE6\xDC\xDC\xDC\xDC\xDC\xDC\xE6\xE6\xDC\xE6\xE6\xDE\xE4\xE6\n\x0B\x0C\r\x0E\x0F\x10\x11\x12\x13\x13\x14\x15\x16\0\x17\0\x18\x19\0\xE6\xDC\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\x1E\x1F \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1B\x1C\x1D\x1E\x1F !\"\xE6\xE6\xDC\xDC\xE6\xE6\xE6\xE6\xE6\xDC\xE6\xE6\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\xE6\xE6\xE6\xE6\xDC\xE6\0\0\xE6\xE6\0\xDC\xE6\xE6\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xDC\xE6\xE6\xDC\xE6\xE6\xDC\xDC\xDC\xE6\xDC\xDC\xE6\xDC\xE6\xE6\xDC\xE6\xDC\xE6\xDC\xE6\xDC\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xDC\xE6\0\0\0\0\0\0\0\0\0\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\xE6\xE6\xE6\0\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\xDC\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xDC\xDC\xDC\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xDC\xDC\xDC\xDC\xDC\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\xDC\xE6\xE6\xDC\xE6\xE6\xDC\xE6\xE6\xE6\xDC\xDC\xDC\x1B\x1C\x1D\xE6\xE6\xE6\xDC\xE6\xE6\xDC\xDC\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\xE6\xDC\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0T[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\t\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0gg\t\0\0\0\0\0\0\0\0kkkk\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0vv\t\0\0\0\0\0\0\0\0zzzz\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\0\xDC\0\xD8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81\x82\0\x84\0\0\0\0\0\x82\x82\x82\x82\0\0\x82\0\xE6\xE6\t\0\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\t\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDE\xE6\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xDC\xDC\xDC\xDC\xDC\xDC\xE6\xE6\xDC\0\xDC\xE6\xE6\xDC\xDC\xE6\xE6\xE6\xE6\xE6\xDC\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xDC\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\t\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\0\x01\xDC\xDC\xDC\xDC\xDC\xE6\xE6\xDC\xDC\xDC\xDC\xE6\0\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\xDC\0\0\0\0\0\0\xE6\0\0\0\xE6\xE6\0\0\0\0\0\0\xE6\xE6\xDC\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xDC\xE6\xE6\xEA\xD6\xDC\xCA\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE8\xE4\xE4\xDC\xDA\xE6\xE9\xDC\xE6\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\x01\x01\xE6\xE6\xE6\xE6\x01\x01\x01\xE6\xE6\0\0\0\0\xE6\0\0\0\x01\x01\xE6\xDC\xE6\x01\x01\xDC\xDC\xDC\xDC\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDA\xE4\xE8\xDE\xE0\xE0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\xDC\xDC\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\0\xE6\xE6\xDC\0\0\xE6\xE6\0\0\0\0\0\xE6\xE6\0\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1A\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xDC\xDC\xDC\xDC\xDC\xDC\xDC\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xDC\0\xE6\0\0\0\0\0\0\0\0\xE6\x01\xDC\0\0\0\0\t\0\0\0\0\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\xDC\xDC\xE6\xE6\xE6\xDC\xE6\xDC\xDC\xDC\0\0\xE6\xDC\xE6\xDC\0\0\0\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\t\x07\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\t\x07\0\0\0\0\0\0\0\0\0\x07\t\0\0\0\0\0\0\0\0\0\0\0\x07\x07\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\0\t\0\0\0\x07\0\0\0\0\0\0\0\0\0\t\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\x06\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\xD8\xD8\x01\x01\x01\0\0\0\xE2\xD8\xD8\xD8\0\0\0\0\0\0\0\0\xDC\xDC\xDC\xDC\xDC\0\0\xE6\xE6\xE6\xE6\xE6\xDC\xDC\0\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\0\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\xE6\0\0\xE6\xE6\xE6\xE6\xE6\0\xE6\xE6\0\xE6\xE6\xE6\xE6\xE6\0\0\0\0\0\0\0\0\0\0\0\0\xE8\xE8\xDC\xE6\xDC\xDC\xDC\xDC\xDC\xDC\xDC\0\0\0\0\0\0\0\0\0\xE6\xE6\xE6\xE6\xE6\xE6\x07\0\0\0\0\0\0\0") }, icu::properties::props::CanonicalCombiningClass::NotReordered) });
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_PROPERTY_ENUM_CANONICAL_COMBINING_CLASS_V1), metadata: icu_provider::DataResponseMetadata::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_property_enum_canonical_combining_class_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_property_enum_canonical_combining_class_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_property_enum_canonical_combining_class_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::PropertyEnumCanonicalCombiningClassV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_property_enum_canonical_combining_class_v1 as impl_property_enum_canonical_combining_class_v1;
