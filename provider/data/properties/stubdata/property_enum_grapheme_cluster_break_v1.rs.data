// @generated
/// Implement `DataProvider<PropertyEnumGraphemeClusterBreakV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 10080B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_property_enum_grapheme_cluster_break_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_PROPERTY_ENUM_GRAPHEME_CLUSTER_BREAK_V1: &'static <icu::properties::provider::PropertyEnumGraphemeClusterBreakV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointMap::CodePointTrie(unsafe { icu::collections::codepointtrie::CodePointTrie::from_parts_unstable_unchecked_v1(icu::collections::codepointtrie::CodePointTrieHeader { high_start: 921600u32, shifted12_high_start: 225u16, index3_null_offset: 132u16, data_null_offset: 32u32, null_value: 0u32, trie_type: icu::collections::codepointtrie::TrieType::Fast }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0@\0\x7F\0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xCF\0 \0 \0 \0 \0\x0C\x01 \0 \0 \0;\x01y\x01\xB9\x01\xEE\x01 \0\x1F\x02P\x02\x85\x02\x9F\x02\xD0\x02\x0E\x03<\x03l\x03\xA2\x03\xDF\x03\x1E\x04]\x04\x9C\x04\xDB\x04\x1A\x05\xDB\x04Z\x05\x9A\x05\xDA\x05\x18\x06V\x06\x96\x06\xD5\x06\x14\x07S\x07\x93\x07\xD2\x07\x11\x08G\x08{\x08\xB6\x08\xC5\x08\x07\x01\x02\tB\t\x82\t\x14\x06\xBF\t\xFE\t<\n \0|\n\x9C\n\xBC\n\xE4\n \0 \0 \0 \0 \0$\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0R\x0B\x87\x0B\xBB\x0B\xF9\x0B.\x0C \0i\x0C \0\x93\x0C \0 \0 \0\xCF\x0C\xFA\x0C\x1C\x01\x81\x029\rw\r\xB7\r\xE5\r\x19\x0E \0 \0Q\x0E \0 \0 \0\xBF\0 \0 \0 \0 \0 \0 \0 \0 \0\x8B\x0E\xBA\x0E \0\xEA\x0E \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x1B\x0F \0M\x0F \0,\x01 \0 \0 \0 \0 \0 \0 \0 \0b\x0F \0\xA0\xx92\x0F\x9B\x0B>\x0C \0 \0 \0 \0\xD0\x0F \0\x10\x10L\x10\x8C\x10\xC5\x10\x05\x11E\x11k\x11\xA8\x11\xE5\x11%\x12 \0 \0 \0\\\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xB0\x12\x9C\x12\xA4\x12\xAC\x12\xB4\x12\xA0\x12\xA8\x12\xE8\x12!\x13 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0L\x11 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0a\x13 \0 \0@\0 \0 \0\x9B\x0B\x91\x13r\x07\x8D\x07\xA5\x07\xC4\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xDE\x07\xFE\x07 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x11\x02 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xFE\0 \0 \0 \0 \0 \0 \0 \0 \0\xCD\x13 \0 \0 \0 \0 \0 \0 \0 \0\xDC\x13 \0 \0\xEC\x13 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0;\x04 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0+\n \0 \0 \0\xFC\x13 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0?\x05 \0 \0 \0 \0\xB3\0 \0 \0 \0 \0\xB9\0\xFE\0 \0 \0-\n \0 \0 \0 \0 \0 \0 \0\x0C\x14 \0 \0\xB7\0\xF8\0 \0 \0\x1C\x14\xE0\x03 \0 \0,\x14:\x14 \0 \0 \0\xFC\0 \0H\x14\xFA\0t\x08 \0 \0\x1B\x02\xE0\x03 \0 \0X\x14h\x14 \0 \0 \0x\x14\x87\x14\x7F\x01 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\x97\x14 \0\x93\x07 \0 \0\xC3\x07\xA7\x14\x17\x02\xB5\x14\xFA\0 \0 \0 \0\xC2\x14\xD1\x14\xE0\x14?\x04 \0 \0 \0\xEB\x14\xFB\x14\x10\x02 \0 \0 \0 \0 \0\x0B\x15\x18\x15 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0(\x15\xFE\0>\x05 \0 \0 \08\x15\xFE\0 \0 \0 \0 \0 \0H\x15\xF7\0 \0 \0 \0 \0 \0\x0C\x04X\x15 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0x\x14h\x15 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0x\x15\x88\x15 \0 \0 \0 \0 \0 \0 \0 \0\x97\x15\xA7\x15 \0\xB6\x15 \0 \0\xC3\x15\x17\x02\xD2\x15 \0 \0\xDE\x15\xE8\x15 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0w\x07\xF8\x15 \0 \0 \0 \0 \0\xBD\0\x07\x16\x16\x16 \0 \0 \0 \0 \0 \0 \0%\x164\x16 \0 \0 \0<\x16L\x16 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x90\x07\\\x16 \0 \0h\x16\xFC\0\x14\x02 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x0E\0x\x16\xF9\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\0\x7F\x16 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xFA\0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x8F\x16 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\x9E\x16\x9F\x16\x9F\x16\xA7\x16\xFC\0 \0 \0 \0 \0\x1A\x02\xFD\0 \0 \0 \0 \0 \0 \0 \0 \0 \0=\x05\x1C\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xF1\0\xBF\0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\x16\xBE\x16\xCB\x16 \0%\n \0 \0 \0 \0 \0S\x03 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xBF\0\xD0\x16\xBF\0\xBF\0\xF2\0\x19\x02\x1A\x02\xB4\0\xBE\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x93\t\xDB\x16\xE9\x16 \0 \0 \0 \0 \0\xB0\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x10\x02 \0 \0 \0\xB3\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB3\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0\x0B\x01 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xF4\x16\xFA\x16 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB4\0\x0E\0\x0E\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\x005\x04U\x04\x84\0\x84\0\x84\0u\x04\x84\x04\x9B\x04\xBB\x04\xD9\x04\xF8\x04\x16\x054\x05T\x05r\x05\x8C\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\xA9\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\xB8\x05\x84\0\x84\0\x84\0\x84\0\xCB\x05\xDF\x05\xF6\x05\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x16\x06\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0&\x06;\x06W\x06\x84\0\x84\0\x84\0w\x06\x84\0\x84\0\x97\x06\xAD\x06\xBF\x06\x84\0\xDE\x06\x84\0\x84\0\x84\0\xF3\x06\x13\x07\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\0\x84\x003\x07R\x07R\x07R\x07R\x07R\x07R\x07R\x07") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x05\x01\x01\x02\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\x03\x03\0\x03\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0B\x0B\x0B\x0B\x0B\x0B\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x0B\0\x03\x03\x03\x03\x03\x03\0\0\x03\x03\0\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0B\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\x03\x03\x03\0\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0B\x0B\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x0B\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\x03\0\n\n\x03\x03\x03\x03\x03\x03\x03\x03\n\n\n\n\x03\n\n\0\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\n\x03\x03\x03\x03\0\0\n\n\0\0\n\n\x03\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\n\n\x03\x03\0\0\0\0\x03\x03\0\0\x03\x03\x03\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\n\x03\x03\x03\x03\x03\0\x03\x03\n\0\n\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\0\x03\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\x03\n\x03\x03\x03\x03\0\0\n\n\0\0\n\n\x03\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\0\0\0\n\n\n\0\n\n\n\x03\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\x03\n\n\n\n\0\x03\x03\x03\0\x03\x03\x03\x03\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\n\x03\n\x03\n\n\0\x03\x03\x03\0\x03\x03\x03\x03\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\x03\n\x03\x03\x03\x03\0\n\n\n\0\n\n\n\x03\x0B\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\n\n\x03\x03\x03\0\x03\0\n\n\n\n\n\n\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\n\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\n\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\x03\0\0\0\0\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\x03\x03\x03\x03\x03\0\x03\x03\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\n\x03\x03\x03\x03\x03\x03\0\x03\x03\n\n\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\x03\x03\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\x03\0\n\x03\x03\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\n\x03\x03\x03\x03\x03\x03\x03\n\n\n\n\n\n\x03\n\n\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x01\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\n\n\n\n\x03\x03\n\n\n\0\0\0\0\n\n\x03\n\n\n\n\n\n\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\n\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\x03\n\x03\x03\x03\x03\x03\x03\x03\0\x03\0\x03\0\0\x03\x03\x03\x03\x03\x03\x03\x03\n\n\n\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\x03\x03\x03\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\n\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\x03\x03\x03\x03\n\n\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\x03\x03\n\n\n\x03\n\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\n\n\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\n\n\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\x03\0\0\0\0\0\0\x03\0\0\n\x03\x03\0\0\0\0\0\0\0\0\0\0\0\x01\x03\x11\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\x03\0\0\0\x03\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\x03\x03\n\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\n\n\n\n\n\n\n\n\n\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\0\0\0\x03\x03\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\n\n\x03\x03\x03\x03\n\n\x03\x03\n\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\n\n\x03\x03\n\n\x03\x03\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\x03\x03\0\0\x03\x03\0\0\0\0\0\x03\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\x03\x03\n\n\0\0\0\0\0\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\x03\n\n\x03\n\n\0\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\0\0\0\0\0\0\0\0\0\0\0\0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\0\0\0\0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\x03\x03\x03\x03\x03\0\0\0\0\0\x03\x03\x03\0\x03\x03\0\0\0\0\0\x03\x03\x03\x03\0\0\0\0\0\0\0\0\x03\x03\x03\0\0\0\0\x03\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\0\0\n\x03\n\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\x03\x03\0\0\0\0\0\0\0\0\0\0\x03\n\n\n\x03\x03\x03\x03\n\n\x03\x03\0\0\x0B\0\0\x03\0\0\0\0\0\0\0\0\0\0\x0B\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\n\x03\x03\x03\0\0\0\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\x03\0\x0B\x0B\0\0\0\0\0\x03\x03\x03\x03\0\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\x03\x03\n\n\x03\x03\x03\x03\0\0\0\0\0\0\x03\0\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\x03\n\n\n\n\0\0\n\n\0\0\n\n\x03\0\0\n\n\0\0\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\x03\n\n\x03\x03\x03\x03\x03\0\x03\0\0\x03\0\x03\x03\x03\n\0\n\n\x03\x03\x0B\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\n\n\x03\x03\x03\n\x03\0\0\0\0\0\0\0\0\0\x03\n\n\x03\x03\x03\x03\x03\x03\n\x03\n\n\x03\n\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\n\n\x03\x03\x03\x03\0\0\n\n\n\n\x03\x03\n\x03\n\n\n\x03\x03\x03\x03\x03\x03\x03\x03\n\n\x03\n\x03\0\0\0\0\0\0\0\0\0\0\0\x03\n\x03\n\n\0\0\x03\x03\x03\x03\n\x03\x03\x03\x03\x03\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\n\x03\x03\0\0\0\0\0\x03\n\n\n\n\n\0\n\n\0\0\x03\x03\x03\x03\x0B\n\x0B\n\x03\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\x03\x03\x03\x03\0\0\x03\x03\n\n\n\n\x03\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\x03\x03\x03\x03\x03\x03\n\x0B\x03\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\n\n\x03\x03\x03\0\0\0\0\x0B\x0B\x0B\x0B\x0B\x0B\x03\x03\x03\x03\x03\x03\x03\n\x03\x03\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\0\x03\x03\x03\x03\x03\x03\n\x03\x03\x03\x03\x03\x03\x03\x03\0\n\x03\x03\x03\x03\x03\x03\n\x03\x03\n\x03\x03\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\0\0\0\x03\0\x03\x03\0\x03\x03\x03\x03\x03\x03\x0B\x03\0\0\0\0\0\0\0\0\0\0\n\n\n\n\n\0\x03\x03\0\n\n\x03\n\x03\0\0\0\0\0\0\0\0\x03\x03\x0B\n\0\0\0\0\0\0\0\0\0\0\0\0\n\n\x03\x03\x03\x03\x03\0\0\0\n\n\x03\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\n\n\n\x03\x03\x03\0\0\0\t\0\0\0\t\t\t\t\0\0\0\0\0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\0\0\0\x03\x03\x03\x01\x01\x01\x01\x01\x01\x01\x01\x03\x03\x03\x03\x03\0\0\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\x03\x03\x03\x03\x03\0\x03\x03\0\x03\x03\x03\x03\x03\0\0\0\0\0\0\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\0\0") }, icu::properties::props::GraphemeClusterBreak::Other) });
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_PROPERTY_ENUM_GRAPHEME_CLUSTER_BREAK_V1), metadata: icu_provider::DataResponseMetadata::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_property_enum_grapheme_cluster_break_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_property_enum_grapheme_cluster_break_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_property_enum_grapheme_cluster_break_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::PropertyEnumGraphemeClusterBreakV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_property_enum_grapheme_cluster_break_v1 as impl_property_enum_grapheme_cluster_break_v1;
